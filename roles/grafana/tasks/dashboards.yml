---
- become: false
  delegate_to: localhost
  run_once: true
  block:
    - name: Create local grafana dashboard directory
      tempfile:
        state: directory
        suffix: dashboards
      register: _tmp_dashboards
      changed_when: false
      check_mode: false

    - name: create grafana folders
      file:
        path: "{{ _tmp_dashboards.path }}/{{ item.folder }}"
        state: "directory"
        mode: 0750
      with_items: 
      - "{{ grafana_dashboards }}"

    - name: copy grafana all dashboard
      file:
        src: "{{ item.src }}"
        dest: "{{ _tmp_dashboards.path }}/{{ item.path | dirname }}/"
        state: hard
      when: item.state == 'file'
      with_filetree: 
      - "dashboards/"

    - name: Import grafana dashboards through API
      uri:
        url: "{{ grafana_api_url }}/api/dashboards/db"
        user: "{{ grafana_security.admin_user }}"
        password: "{{ grafana_security.admin_password }}"
        force_basic_auth: true
        method: POST
        status_code: 200
        body_format: json
        body: >
          {
            "dashboard": {{ lookup("file", item.src ) }},
            "overwrite": true,
            "message": "Updated by ansible"
          }
      when: item.state == 'file'
      with_filetree:
        - "{{ _tmp_dashboards.path }}/"
      when: not grafana_use_provisioning

- when: grafana_use_provisioning
  block:
    - name: Create/Update dashboards file (provisioning)
      become: true
      template:
        src: "grafana_folders.yml.j2"
        dest: "{{ grafana_conf_dir }}/provisioning/dashboards/ansible.yml"
        backup: false
        owner: "{{ grafana_user }}"
        group: "{{ grafana_group }}"
      notify: restart grafana

    - name: Register previously copied dashboards
      find:
        paths: "{{ grafana_data_dir }}/dashboards"
        hidden: true
        patterns:
          - "*.json"
      register: _dashboards_present
      when: grafana_provisioning_synced

    - name: Create target grafana folders
      become: true
      file:
        path: "{{ grafana_data_dir }}/dashboards/{{ item.folder }}"
        state: "directory"
        mode: 0750
      with_items: 
      - "{{ grafana_dashboards }}"

    - name: Import grafana dashboards
      copy:
        src: "{{ item.src }}"
        dest: "{{ grafana_data_dir }}/dashboards/{{ item.path | dirname }}"
      when: item.state == 'file' and item.src is match('.*.json')
      with_filetree: 
      - "dashboards/"
      register: _dashboards_copied
      notify: "provisioned dashboards changed"

    - name: Get dashboard lists
      set_fact:
        _dashboards_present_list: "{{ _dashboards_present | json_query('files[*].path') | default([]) }}"
        _dashboards_copied_list: "{{ _dashboards_copied | json_query('results[*].dest') | default([]) }}"
      when: grafana_provisioning_synced

    - name: Remove dashbards not present on deployer machine (synchronize)
      become: true
      file:
        path: "{{ item }}"
        state: absent
      with_items: "{{ _dashboards_present_list | difference( _dashboards_copied_list ) }}"
      when: grafana_provisioning_synced
