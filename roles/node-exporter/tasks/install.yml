---
- name: Install dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ node_exporter_dependencies }}"

- name: Create the node_exporter group
  group:
    name: "{{ node_exporter_system_group }}"
    state: present
    system: true
  when: node_exporter_system_group != "root"

- name: Create the node_exporter user
  user:
    name: "{{ node_exporter_system_user }}"
    groups: "{{ node_exporter_system_group }}"
    append: true
    shell: /usr/sbin/nologin
    system: true
    createhome: false
    home: /
  when: node_exporter_system_user != "root"

- name: Download node_exporter binary to local folder
  become: false
  get_url:
    url: "{{ repo_url }}/node_exporter/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
  register: _download_binary
  until: _download_binary is succeeded
  retries: 5
  delay: 2
  delegate_to: localhost
  check_mode: false

- name: Unpack node_exporter binary
  become: false
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
  delegate_to: localhost
  check_mode: false

- name: "Create {{ prometheus_install_dir }}"
  file:
    path: "{{ prometheus_install_dir }}"
    state: directory
    mode: 0755

- name: Propagate node_exporter binaries
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-{{ go_arch }}/node_exporter"
    dest: "{{ prometheus_install_dir }}/node_exporter"
    mode: 0750
    owner: "{{ node_exporter_system_user }}"
    group: "{{ node_exporter_system_group }}"
  notify: restart node_exporter
  when: not ansible_check_mode
